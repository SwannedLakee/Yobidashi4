name: Run Gradle on PRs and Pushes
on: 
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check if release exists
        id: check_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          current_date=$(date "+%Y%m%d")
          tag_title="v0.9.2_${current_date}"
          echo "tag_title=${tag_title}" >> $GITHUB_OUTPUT
          RELEASE_EXISTS=$(curl -s -H "Authorization: token ${GH_TOKEN}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/releases/tags/${tag_title}" | jq -r '.message')
          if [[ "$RELEASE_EXISTS" == "Not Found" ]]; then
            echo "release_exists=false" >> $GITHUB_OUTPUT
            echo "Release ${tag_title} does not exist. I will create it on next step."
          else
            echo "release_exists=true" >> $GITHUB_OUTPUT
            echo "Release ${tag_title} already exists, skipping creation."
          fi
        shell: bash
      - name: Create Release
        if: steps.check_release.outputs.release_exists == 'false'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ steps.check_release.outputs.tag_title }} --title ${{ steps.check_release.outputs.tag_title }}
        shell: bash

  build:
    needs: release
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install
        timeout-minutes: 3
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '21'
          cache: gradle

      - name: Build UberJar
        timeout-minutes: 5
        run: "./gradlew packageUberJarForCurrentOS"
        env:
          _JAVA_OPTIONS: '-Duser.language=ja -Duser.country=JP'

      - name: Upload artifact
        timeout-minutes: 5
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: UberJar-${{ runner.os }}
          path: |
            build/compose/jars/*.jar

      - name: Upload artifact to release
        timeout-minutes: 5
        if: ${{ success() }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          tag_title="v0.9.1_latest"
          gh release upload ${tag_title} build/compose/jars/*.jar --clobber
        shell: bash

      - name: Upload Kotlin build report
        timeout-minutes: 2
        uses: actions/upload-artifact@v4
        with:
          name: Kotlin build report-${{ runner.os }}
          path: |
            build/reports/kotlin-build

  test:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: install
        timeout-minutes: 3
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '21'
          cache: gradle

      - name: kover
        timeout-minutes: 15
        env:
          TZ: 'Asia/Tokyo'
          _JAVA_OPTIONS: '-Duser.language=ja -Duser.country=JP -Duser.timezone=Asia/Tokyo'
        run: "./gradlew koverHtmlReport"

      - name: Upload Unit Test Results
        timeout-minutes: 3
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: Unit Test Results
          path: |
            build/reports/tests
            domain/build/reports/tests
            infrastructure/build/reports/tests
            presentation/build/reports/tests

      - name: Upload Kover Results
        timeout-minutes: 3
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: Kover Results
          path: |
            build/reports/kover

      - name: Upload Kotlin build report
        timeout-minutes: 2
        uses: actions/upload-artifact@v4
        with:
          name: Kotlin build report-test
          path: |
            build/reports/kotlin-build

      - name: Print summary
        timeout-minutes: 1
        if: ${{ success() }}
        run: ./gradlew printCoverageSummary

      - name: Store summary
        timeout-minutes: 1
        if: ${{ success() }}
        run: |
          echo "## Test coverage" >> $GITHUB_STEP_SUMMARY
          ./gradlew printCoverageSummary >> $GITHUB_STEP_SUMMARY
          cat $GITHUB_STEP_SUMMARY
        shell: bash

      - name: Download Artifacts
        timeout-minutes: 1
        if: ${{ success() }}
        uses: actions/download-artifact@v4
        with:
          path: artifacts
